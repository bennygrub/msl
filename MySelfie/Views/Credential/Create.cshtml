@model MySelfie.Models.CredentialCreateModel

@{
    ViewBag.Title = "WallCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
	<div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
		<h1 class="page-title txt-color-blueDark">
			<i class="fa fa-plus fa-fw "></i> 
				Credential 
			<span>> 
				Create
			</span>
		</h1>
	</div>
</div>
<!-- widget grid -->
<section id="widget-grid" class="">
	<div class="row">
				
		<!-- NEW COL START -->
		<fieldset class="col-sm-12 col-md-12 col-lg-10">
            <!-- Widget ID (each widget will need unique ID)-->
			<div class="jarviswidget" id="wid-id-1" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
                <header>
	                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
	                <h2>Create New Credential</h2>
				
                </header>
				<!-- widget div-->
				<div>
                    <!-- widget edit box -->
			        <div class="jarviswidget-editbox">
				        <!-- This area used as dropdown edit box -->
				
			        </div>
			        <!-- end widget edit box -->
                    <!-- widget content -->
					<div class="widget-body no-padding">
                        @using (Html.BeginForm("Create", "Credential", null, FormMethod.Post, new { @class="smart-form" })) 
                        {
                            @Html.ValidationSummary(true)
                            @Html.AntiForgeryToken()
                            <header>
                                Admin Settings
                            </header>
                            <fieldset>
                                <section>
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.UserName)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.UserName)
                                    </div>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.AppName, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.AppName)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.AppName)
                                    </div>
                                </section>
                            </fieldset>                           
                            <header>
                                API Credentials
                            </header>
                            <fieldset>
                                <section>
                                    @Html.LabelFor(model => model.ConsumerKey, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.ConsumerKey)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.ConsumerKey)
                                    </div>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.ConsumerSecret, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.ConsumerSecret)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.ConsumerSecret)
                                    </div>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.UserTokenKey, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.UserTokenKey)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.UserTokenKey)
                                    </div>
                                </section>
                                <section>
                                    @Html.LabelFor(model => model.UserTokenSecret, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.EditorFor(model => model.UserTokenSecret)
                                    </label>
                                    <div class="txt-color-red">
                                        @Html.ValidationMessageFor(model => model.UserTokenSecret)
                                    </div>
                                </section>                                
                            </fieldset>                            
                            <fieldset>
                                <footer>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fa fa-save"></i>
                                        Submit
                                    </button>
                                    <button type="button" class="btn btn-default" onclick="window.history.back();">
                                        Back
                                    </button>
                                </footer>
                            </fieldset>
                        }
                    </div>
					<!-- end widget content -->
				
				</div>
				<!-- end widget div -->
				
			</div>
			<!-- end widget -->
				
		</article>
		<!-- END COL -->
    </div>
				
    <!-- END ROW -->
</section>
<!-- end widget grid -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
